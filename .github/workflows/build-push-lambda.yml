name: Build & Push ZAP Lambda

on:
  push:
    paths:
      - "lambda-zap/**"
      - ".github/workflows/build-push-lambda.yml"

env:
  ECR_REPO: zap-lambda
  AWS_REGION: us-west-2
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2

      - name: Set AWS account ID
        id: aws-account
        run: |
          echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Build & push
        run: |
          TAG=${GITHUB_SHA::7}
          TAG1="dev"
          docker build -t $ECR_REPO:$TAG1 ./lambda-zap
          docker tag $ECR_REPO:$TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$TAG1
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$TAG1

      # - name: Terraform Init & Apply
      #   run: |
      #     terraform init -input=false
      #     terraform apply -auto-approve -input=false
      #   env:
      #     TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

      # - name: Update Lambda code
      #   run: |
      #     aws lambda update-function-code \
      #       --function-name zap-dast \
      #       --image-uri $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$TAG
